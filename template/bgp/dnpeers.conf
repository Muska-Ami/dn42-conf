template bgp dnpeers {
    local as OWNAS;
    path metric 1;

    ipv4 {
        import filter {
            if is_valid_network() && !is_self_net() then {
                if (roa_check(dn42_roa, net, bgp_path.last) != ROA_VALID) then {
                    # Reject when unknown or invalid according to ROA
                    print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
                    reject;
                } else accept;
            } else reject;
        };

        export filter { if is_valid_network() && source ~ [RTS_STATIC, RTS_BGP] then accept; else reject; };
        import limit 9000 action block;
        import table;
        extended next hop;
    };

    ipv6 {   
        import filter {
            if is_valid_network_v6() && !is_self_net_v6() then {
                if (roa_check(dn42_roa_v6, net, bgp_path.last) != ROA_VALID) then {
                    # Reject when unknown or invalid according to ROA
                    print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
                    reject;
                } else accept;
            } else reject;
        };
        export filter { if is_valid_network_v6() && source ~ [RTS_STATIC, RTS_BGP] then accept; else reject; };
        import limit 9000 action block;
        import table;
    };
}
